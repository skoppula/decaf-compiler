Global field declarations:
field_in_class:IntType(offset=2000)


Callouts(printf)


Method Name: test_short_circuit
Method Return Type: BoolType
	Parameters:
	andy:BoolType(offset=-8)
	okay:BoolType(offset=-16)
	

	Field declarations:
	.T35:IntType(offset=-72)
	

	Table's sub-tables:
		New scope: IF
		Field declarations:
		.T31:IntType(offset=-40)
		.T30:IntType(offset=-32)
		.T29:IntType(offset=-24)
		Table's sub-tables:
			New scope: IF
			Field declarations:
			.T34:IntType(offset=-64)
			.T33:IntType(offset=-56)
			.T32:IntType(offset=-48)
		

			New scope: IF
			Field declarations:
		

	

Method Name: main
Method Return Type: VoidType
	Parameters:
	

	Field declarations:
	.T46:IntType(offset=-128)
	.T52:IntType(offset=-176)
	result:IntType(offset=-16)
	field_on_stack:IntType(offset=-8)
	.T93:IntType(offset=-504)
	.T45:IntType(offset=-120)
	.T51:IntType(offset=-168)
	.T54:IntType(offset=-192)
	.T60:IntType(offset=-240)
	.T48:IntType(offset=-144)
	.T57:IntType(offset=-216)
	.T36:IntType(offset=-48)
	.T42:IntType(offset=-96)
	.T39:IntType(offset=-72)
	a:BoolType(offset=-24)
	.T102:IntType(offset=-576)
	.T56:IntType(offset=-208)
	.T44:IntType(offset=-112)
	.T50:IntType(offset=-160)
	.T59:IntType(offset=-232)
	.T38:IntType(offset=-64)
	.T53:IntType(offset=-184)
	x:IntType(offset=-32)
	.T47:IntType(offset=-136)
	.T41:IntType(offset=-88)
	i:IntType(offset=-40)
	.T94:IntType(offset=-512)
	.T49:IntType(offset=-152)
	.T40:IntType(offset=-80)
	.T55:IntType(offset=-200)
	.T37:IntType(offset=-56)
	.T58:IntType(offset=-224)
	.T43:IntType(offset=-104)
	

	Table's sub-tables:
		New scope: IF
		Field declarations:
		.T63:IntType(offset=-264)
		.T66:IntType(offset=-288)
		.T62:IntType(offset=-256)
		.T65:IntType(offset=-280)
		.T67:IntType(offset=-296)
		.T61:IntType(offset=-248)
		.T64:IntType(offset=-272)
	

		New scope: IF
		Field declarations:
	

		New scope: IF
		Field declarations:
		.T72:IntType(offset=-336)
		.T75:IntType(offset=-360)
		.T69:IntType(offset=-312)
		.T74:IntType(offset=-352)
		.T71:IntType(offset=-328)
		.T68:IntType(offset=-304)
		.T73:IntType(offset=-344)
		.T76:IntType(offset=-368)
		.T70:IntType(offset=-320)
	

		New scope: IF
		Field declarations:
	

		New scope: IF
		Field declarations:
		.T81:IntType(offset=-408)
		.T78:IntType(offset=-384)
		.T80:IntType(offset=-400)
		.T83:IntType(offset=-424)
		.T77:IntType(offset=-376)
		.T82:IntType(offset=-416)
		.T79:IntType(offset=-392)
	

		New scope: IF
		Field declarations:
	

		New scope: IF
		Field declarations:
		.T90:IntType(offset=-480)
		.T84:IntType(offset=-432)
		.T87:IntType(offset=-456)
		.T92:IntType(offset=-496)
		.T89:IntType(offset=-472)
		.T86:IntType(offset=-448)
		.T91:IntType(offset=-488)
		.T85:IntType(offset=-440)
		.T88:IntType(offset=-464)
	

		New scope: IF
		Field declarations:
	

		New scope: FOR
		Field declarations:
		.T100:IntType(offset=-560)
		.T96:IntType(offset=-528)
		.T99:IntType(offset=-552)
		.T95:IntType(offset=-520)
		.T98:IntType(offset=-544)
		.T101:IntType(offset=-568)
		.T97:BoolType(offset=-536)
	

Method Name: test_long_args
Method Return Type: IntType
	Parameters:
	a:IntType(offset=-8)
	b:IntType(offset=-16)
	c:IntType(offset=-24)
	d:IntType(offset=-32)
	e:IntType(offset=-40)
	f:IntType(offset=-48)
	

	Field declarations:
	.T10:IntType(offset=-128)
	.T19:IntType(offset=-200)
	.T25:IntType(offset=-248)
	.T13:IntType(offset=-152)
	.T7:IntType(offset=-104)
	.T28:IntType(offset=-272)
	.T16:IntType(offset=-176)
	.T1:IntType(offset=-56)
	.T4:IntType(offset=-80)
	.T27:IntType(offset=-264)
	.T15:IntType(offset=-168)
	.T21:IntType(offset=-216)
	.T18:IntType(offset=-192)
	.T24:IntType(offset=-240)
	.T12:IntType(offset=-144)
	.T6:IntType(offset=-96)
	.T9:IntType(offset=-120)
	.T3:IntType(offset=-72)
	.T26:IntType(offset=-256)
	.T11:IntType(offset=-136)
	.T14:IntType(offset=-160)
	.T20:IntType(offset=-208)
	.T2:IntType(offset=-64)
	.T17:IntType(offset=-184)
	.T23:IntType(offset=-232)
	.T5:IntType(offset=-88)
	.T8:IntType(offset=-112)
	.T22:IntType(offset=-224)
	


TacProgramEnter(200)
TacStringLiteralStart(201)
TacStringLiteral(3,.L1,args: %d+%d+%d+%d+%d+%d=%d\n)
TacStringLiteral(59,.L17,short circuit failed in and\n)
TacStringLiteral(63,.L18,short circuit failed in or\n)
TacStringLiteral(75,.L19,hello world from main\n)
TacStringLiteral(81,.L20,some values (13,14): %d %d\n)
TacStringLiteral(93,.L21,returned a variable, value is %d, should be 81\n)
TacStringLiteral(100,.L22,returned a constant, value is %d, should be 1\n)
TacStringLiteral(114,.L26,successfully did a short-circuited and.\n)
TacStringLiteral(118,.L27,if failed on a && proc\n)
TacStringLiteral(133,.L32,if failed on !a && proc\n)
TacStringLiteral(137,.L33,successfully did a short-circuited and.\n)
TacStringLiteral(149,.L37,successfully did a short-circuited or.\n)
TacStringLiteral(153,.L38,if failed on a || proc\n)
TacStringLiteral(168,.L43,successfully did a short-circuited or.\n)
TacStringLiteral(172,.L44,if failed on !a || proc\n)
TacStringLiteral(195,.L48,sum from 0 to 99 is %d, should be 4950\n)
TacStringLiteralEnd(202)
TacNop(1,)
TacLabel(2,test_long_args)
TacMethodEnter(45,Method(test_long_args,IntType))
TacCopy(4,.T1,a)
TacCopy(5,.T2,b)
TacCopy(6,.T3,c)
TacCopy(7,.T4,d)
TacCopy(8,.T5,e)
TacCopy(9,.T6,f)
TacCopy(10,.T12,a)
TacCopy(11,.T13,b)
TacBinOp(12,.T11,.T12,ADD,.T13)
TacLabel(13,.L2)
TacCopy(14,.T14,c)
TacBinOp(15,.T10,.T11,ADD,.T14)
TacLabel(16,.L3)
TacCopy(17,.T15,d)
TacBinOp(18,.T9,.T10,ADD,.T15)
TacLabel(19,.L4)
TacCopy(20,.T16,e)
TacBinOp(21,.T8,.T9,ADD,.T16)
TacLabel(22,.L5)
TacCopy(23,.T17,f)
TacBinOp(24,.T7,.T8,ADD,.T17)
TacLabel(25,.L6)
TacMethodCallStmt(26,printf,List(.L1, .T1, .T2, .T3, .T4, .T5, .T6, .T7))
TacCopy(27,.T23,a)
TacCopy(28,.T24,b)
TacBinOp(29,.T22,.T23,ADD,.T24)
TacLabel(30,.L7)
TacCopy(31,.T25,c)
TacBinOp(32,.T21,.T22,ADD,.T25)
TacLabel(33,.L8)
TacCopy(34,.T26,d)
TacBinOp(35,.T20,.T21,ADD,.T26)
TacLabel(36,.L9)
TacCopy(37,.T27,e)
TacBinOp(38,.T19,.T20,ADD,.T27)
TacLabel(39,.L10)
TacCopy(40,.T28,f)
TacBinOp(41,.T18,.T19,ADD,.T28)
TacLabel(42,.L11)
TacReturnValue(43,.T18)
TacReturn(44)
TacSystemExit(46,-2)
TacNop(47,)
TacLabel(48,test_short_circuit)
TacMethodEnter(70,Method(test_short_circuit,BoolType))
TacCopy(49,.T30,okay)
TacCopyBoolean(50,.T31,true)
TacBinOp(51,.T29,.T30,NEQ,.T31)
TacLabel(52,.L12)
TacIfFalse(53,.T29,.L13)
TacCopy(54,.T33,andy)
TacCopyBoolean(55,.T34,true)
TacBinOp(56,.T32,.T33,NEQ,.T34)
TacLabel(57,.L14)
TacIfFalse(58,.T32,.L16)
TacMethodCallStmt(60,printf,List(.L17))
TacGoto(61,.L15)
TacLabel(62,.L16)
TacMethodCallStmt(64,printf,List(.L18))
TacLabel(65,.L15)
TacLabel(66,.L13)
TacCopyBoolean(67,.T35,true)
TacReturnValue(68,.T35)
TacReturn(69)
TacSystemExit(71,-2)
TacNop(72,)
TacGlobl(73,main)
TacLabel(74,main)
TacMethodEnter(198,Method(main,VoidType))
TacMethodCallStmt(76,printf,List(.L19))
TacCopyInt(77,.T36,13)
TacCopy(78,field_in_class,.T36)
TacCopyInt(79,.T37,14)
TacCopy(80,field_on_stack,.T37)
TacCopy(82,.T38,field_in_class)
TacCopy(83,.T39,field_on_stack)
TacMethodCallStmt(84,printf,List(.L20, .T38, .T39))
TacCopy(85,.T42,field_in_class)
TacCopy(86,.T44,field_in_class)
TacCopy(87,.T46,field_in_class)
TacCopy(88,.T48,field_on_stack)
TacCopy(89,.T50,field_on_stack)
TacCopy(90,.T52,field_on_stack)
TacMethodCallExpr(91,.T40,test_long_args,List(.T42, .T44, .T46, .T48, .T50, .T52))
TacCopy(92,result,.T40)
TacCopy(94,.T53,result)
TacMethodCallStmt(95,printf,List(.L21, .T53))
TacCopyBoolean(96,.T56,false)
TacCopyBoolean(97,.T58,true)
TacMethodCallExpr(98,.T54,test_short_circuit,List(.T56, .T58))
TacCopy(99,a,.T54)
TacCopy(101,.T59,a)
TacMethodCallStmt(102,printf,List(.L22, .T59))
TacCopyBoolean(103,.T60,true)
TacCopy(104,a,.T60)
TacCopy(105,.T62,a)
TacCopy(106,.T61,.T62)
TacIfFalse(107,.T62,.L23)
TacCopyBoolean(108,.T65,true)
TacCopyBoolean(109,.T67,true)
TacMethodCallExpr(110,.T63,test_short_circuit,List(.T65, .T67))
TacBinOp(111,.T61,.T62,AND,.T63)
TacLabel(112,.L23)
TacIfFalse(113,.T61,.L25)
TacMethodCallStmt(115,printf,List(.L26))
TacGoto(116,.L24)
TacLabel(117,.L25)
TacMethodCallStmt(119,printf,List(.L27))
TacLabel(120,.L24)
TacCopy(121,.T70,a)
TacCopyBoolean(122,.T71,true)
TacBinOp(123,.T69,.T70,NEQ,.T71)
TacLabel(124,.L28)
TacCopy(125,.T68,.T69)
TacIfFalse(126,.T69,.L29)
TacCopyBoolean(127,.T74,true)
TacCopyBoolean(128,.T76,false)
TacMethodCallExpr(129,.T72,test_short_circuit,List(.T74, .T76))
TacBinOp(130,.T68,.T69,AND,.T72)
TacLabel(131,.L29)
TacIfFalse(132,.T68,.L31)
TacMethodCallStmt(134,printf,List(.L32))
TacGoto(135,.L30)
TacLabel(136,.L31)
TacMethodCallStmt(138,printf,List(.L33))
TacLabel(139,.L30)
TacCopy(140,.T78,a)
TacCopy(141,.T77,.T78)
TacIf(142,.T78,.L34)
TacCopyBoolean(143,.T81,false)
TacCopyBoolean(144,.T83,false)
TacMethodCallExpr(145,.T79,test_short_circuit,List(.T81, .T83))
TacBinOp(146,.T77,.T78,OR,.T79)
TacLabel(147,.L34)
TacIfFalse(148,.T77,.L36)
TacMethodCallStmt(150,printf,List(.L37))
TacGoto(151,.L35)
TacLabel(152,.L36)
TacMethodCallStmt(154,printf,List(.L38))
TacLabel(155,.L35)
TacCopy(156,.T86,a)
TacCopyBoolean(157,.T87,true)
TacBinOp(158,.T85,.T86,NEQ,.T87)
TacLabel(159,.L39)
TacCopy(160,.T84,.T85)
TacIf(161,.T85,.L40)
TacCopyBoolean(162,.T90,false)
TacCopyBoolean(163,.T92,true)
TacMethodCallExpr(164,.T88,test_short_circuit,List(.T90, .T92))
TacBinOp(165,.T84,.T85,OR,.T88)
TacLabel(166,.L40)
TacIfFalse(167,.T84,.L42)
TacMethodCallStmt(169,printf,List(.L43))
TacGoto(170,.L41)
TacLabel(171,.L42)
TacMethodCallStmt(173,printf,List(.L44))
TacLabel(174,.L41)
TacCopyInt(175,.T93,0)
TacCopy(176,result,.T93)
TacCopyInt(177,.T94,100)
TacCopy(178,field_on_stack,.T94)
TacCopyInt(179,.T95,0)
TacCopy(181,i,.T95)
TacCopy(180,.T96,field_on_stack)
TacLabel(182,.L45)
TacBinOp(183,.T97,.T95,LT,.T96)
TacIfFalse(184,.T97,.L46)
TacCopy(185,.T99,result)
TacCopy(186,.T100,i)
TacBinOp(187,.T98,.T99,ADD,.T100)
TacLabel(188,.L47)
TacCopy(189,result,.T98)
TacCopyInt(190,.T101,1)
TacBinOp(191,.T95,.T95,ADD,.T101)
TacCopy(192,i,.T95)
TacGoto(193,.L45)
TacLabel(194,.L46)
TacCopy(196,.T102,result)
TacMethodCallStmt(197,printf,List(.L48, .T102))
TacReturn(199)
